{"ast":null,"code":"var _jsxFileName = \"D:\\\\Cuvette\\\\Quizze\\\\src\\\\pages\\\\createQuiz\\\\CreateQuiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Mymodal({\n  closeModal\n}) {\n  _s();\n  const [activeStep, setActiveStep] = useState(0);\n  const [quizName, setQuizName] = useState(\"\");\n  const [quizType, setQuizType] = useState(null);\n  // ... other state variables (option, url, both, questions, currentQuestion, currentOptions)\n\n  // ... other functions (handleQuizNameChange, handleClick, handleQuestionChange, ...)\n\n  const handleContinueClick = () => {\n    if (activeStep === 0) {\n      setActiveStep(prevStep => prevStep + 1);\n    } else if (activeStep === 1) {\n      if (quizType === \"qna\") {\n        setActiveStep(1.1); // Set sub-step for Q&A options\n      } else if (quizType === \"poll\") {\n        setActiveStep(1.2); // Set sub-step for poll options\n      } else {\n        setActiveStep(prevStep => prevStep + 1); // Move to step 2 if no quiz type selected\n      }\n    }\n  };\n\n  // ... other functions (handleAddQuestions, handleAddOption, QnAClick, PollClick)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"modal-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"modal-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"quiz-name-type\",\n          children: [activeStep === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"action-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              class: \"quiz-name\",\n              placeholder: \"Quiz name\",\n              value: quizName,\n              onChange: handleQuizNameChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"display-flex buttons\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                class: \"quiz-type\",\n                children: \"Quiz Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                class: \"qna-button\",\n                onClick: () => handleClick(\"qna\"),\n                style: {\n                  backgroundColor: quizType === \"qna\" ? \"#60B84B\" : \"white\",\n                  color: quizType === \"qna\" ? \"white\" : \"#757575\"\n                },\n                children: \"Q & A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                class: \"poll-type-button\",\n                onClick: () => handleClick(\"poll\"),\n                style: {\n                  backgroundColor: quizType === \"poll\" ? \"#60B84B\" : \"white\",\n                  color: quizType === \"poll\" ? \"white\" : \"#757575\"\n                },\n                children: \"Poll Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"cancel\",\n              onClick: closeModal,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"continue\",\n              onClick: handleContinueClick,\n              disabled: !quizType,\n              children: \"Continue\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"box\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(Mymodal, \"BEGgz/Wf9JXxc4FHMmL3dwSi5EU=\");\n_c = Mymodal;\nvar _c;\n$RefreshReg$(_c, \"Mymodal\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Mymodal","closeModal","_s","activeStep","setActiveStep","quizName","setQuizName","quizType","setQuizType","handleContinueClick","prevStep","children","class","placeholder","value","onChange","handleQuizNameChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","handleClick","style","backgroundColor","color","disabled","_c","$RefreshReg$"],"sources":["D:/Cuvette/Quizze/src/pages/createQuiz/CreateQuiz.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nexport default function Mymodal({ closeModal }) {\n  const [activeStep, setActiveStep] = useState(0);\n  const [quizName, setQuizName] = useState(\"\");\n  const [quizType, setQuizType] = useState(null);\n  // ... other state variables (option, url, both, questions, currentQuestion, currentOptions)\n\n  // ... other functions (handleQuizNameChange, handleClick, handleQuestionChange, ...)\n\n  const handleContinueClick = () => {\n    if (activeStep === 0) {\n      setActiveStep((prevStep) => prevStep + 1);\n    } else if (activeStep === 1) {\n      if (quizType === \"qna\") {\n        setActiveStep(1.1); // Set sub-step for Q&A options\n      } else if (quizType === \"poll\") {\n        setActiveStep(1.2); // Set sub-step for poll options\n      } else {\n        setActiveStep((prevStep) => prevStep + 1); // Move to step 2 if no quiz type selected\n      }\n    }\n  };\n\n  // ... other functions (handleAddQuestions, handleAddOption, QnAClick, PollClick)\n\n  return (\n    <div>\n      <div class=\"modal-wrapper\">\n        <div class=\"modal-container\">\n          <div class=\"quiz-name-type\">\n            {activeStep === 0 && (\n              <div class=\"action-buttons\">\n                <input\n                  class=\"quiz-name\"\n                  placeholder=\"Quiz name\"\n                  value={quizName}\n                  onChange={handleQuizNameChange}\n                ></input>\n\n                <div class=\"display-flex buttons\">\n                  <p class=\"quiz-type\">Quiz Type</p>\n                  <button\n                    class=\"qna-button\"\n                    onClick={() => handleClick(\"qna\")}\n                    style={{\n                      backgroundColor: quizType === \"qna\" ? \"#60B84B\" : \"white\",\n                      color: quizType === \"qna\" ? \"white\" : \"#757575\",\n                    }}\n                  >\n                    Q & A\n                  </button>\n                  <button\n                    class=\"poll-type-button\"\n                    onClick={() => handleClick(\"poll\")}\n                    style={{\n                      backgroundColor: quizType === \"poll\" ? \"#60B84B\" : \"white\",\n                      color: quizType === \"poll\" ? \"white\" : \"#757575\",\n                    }}\n                  >\n                    Poll Type\n                  </button>\n                </div>\n                <button class=\"cancel\" onClick={closeModal}>\n                  Cancel\n                </button>\n                <button class=\"continue\" onClick={handleContinueClick} disabled={!quizType}>\n                  Continue\n                </button>\n              </div>\n            )}\n            <div class=\"box\">\n              {/* ... conditional rendering for steps 1, 1.1, 1.2, and 2 */}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}